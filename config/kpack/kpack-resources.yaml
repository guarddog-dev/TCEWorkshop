#@ load("@ytt:data", "data")
#@ load("@ytt:json", "json")
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.registry.secret.name
type: kubernetes.io/dockerconfigjson
stringData:
  #@ registry_creds = {"username": data.values.registry.username, "password": data.values.registry.password}
  .dockerconfigjson: #@ json.encode({"auths": {data.values.registry.server: registry_creds}})
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: #@ data.values.service.account.name
  namespace: default
secrets:
- name: #@ data.values.registry.secret.name
imagePullSecrets:
- name: #@ data.values.registry.secret.name
---
apiVersion: kpack.io/v1alpha2
kind: ClusterStore
metadata:
  name: default
spec:
  sources:
  - image: gcr.io/paketo-buildpacks/dotnet-core
  - image: gcr.io/paketo-buildpacks/java
  - image: gcr.io/paketo-buildpacks/nodejs
---
apiVersion: kpack.io/v1alpha2
kind: ClusterStack
metadata:
  name: base
spec:
  id: "io.buildpacks.stacks.bionic"
  buildImage:
    image: "paketobuildpacks/build:base-cnb"
  runImage:
    image: "paketobuildpacks/run:base-cnb"
---
apiVersion: kpack.io/v1alpha2
kind: Builder
metadata:
  name: my-builder
  namespace: default
spec:
  serviceAccountName: #@ data.values.service.account.name
  tag: #@ data.values.registry.tags.prefix + data.values.registry.tags.builder
  stack:
    name: base
    kind: ClusterStack
  store:
    name: default
    kind: ClusterStore
  order:
  - group:
    - id: paketo-buildpacks/dotnet-core
  - group:
    - id: paketo-buildpacks/java
  - group:
    - id: paketo-buildpacks/nodejs
